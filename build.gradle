plugins {
    id("fabric-loom") version("0.4.31")
    id("com.matthewprenger.cursegradle") version("1.1.0")
    id("maven")
}

apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/master/generic/markdown-git-changelog.gradle'

def ENV = System.getenv()
version = project.mod_version
group = project.mod_package
archivesBaseName = project.mod_name

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    accessWidener "src/main/resources/kubejs.accessWidener"
}

repositories {
    mavenLocal()
}

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.fabricmc:yarn:${project.mapping_version}:v2")
    modApi("net.fabricmc:fabric-loader:${project.fabric_version}")
    modApi("net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}")
    compileOnly("com.google.code.findbugs:jsr305:3.0.2")
    modRuntime("me.shedaniel:RoughlyEnoughItems:5.2.3")
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

if (ENV.LOCAL_MAVEN) {
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "file://${ENV.LOCAL_MAVEN}")
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier("sources")
    from sourceSets.main.allSource
}

if (ENV.CURSEFORGE_KEY) {
    curseforge {
        apiKey = ENV.CURSEFORGE_KEY
        project {
            id = "${curseforge_id}"
            releaseType = "release"
            addGameVersion "1.16.1"
            addGameVersion "Fabric"
            relations {
                requiredDependency "fabric-api"
            }
            changelog = getGitChangelog
            changelogType = 'markdown'
            mainArtifact(file("${project.buildDir}/libs/${project.archivesBaseName}-${project.version}.jar"))
            addArtifact(file("${project.buildDir}/libs/${project.archivesBaseName}-${project.version}-sources.jar"))
            afterEvaluate {
                uploadTask.dependsOn("remapJar")
            }
        }
    }
    options {
        forgeGradleIntegration = false
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}